--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -383,11 +383,18 @@
     find_package (SNAPPY)
 endif ()
 if (ENABLE_STATIC_SNAPPY OR NOT SNAPPY_FOUND)
-    set (SNAPPY_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/thirdparty/snappy)
-    set (SNAPPY_LIBRARIES snappy_bundled)
+    # We want to use the system snappy for the retracers, as they run on
+    # potentially-untrusted input, but we need static snappy for the
+    # LD_PRELOADed tracers to avoid symbol collisions in the tracee.
+    #
+    # Predictably, the system libsnappy.a is built without PIC, so
+    # useless for us. So do both: find the system libsnappy for the
+    # retracers and and build the bundled libsnappy for the tracers.
+    find_package (SNAPPY REQUIRED)
+    set (SNAPPY_STATIC_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/thirdparty/snappy)
+    set (SNAPPY_STATIC_LIBRARIES snappy_bundled)
     add_subdirectory (thirdparty/snappy)
 endif ()
-include_directories (${SNAPPY_INCLUDE_DIRS})
 
 if (NOT WIN32)
     # zlib 1.2.4-1.2.5 made it impossible to read the last block of incomplete
--- a/wrappers/CMakeLists.txt
+++ b/wrappers/CMakeLists.txt
@@ -2,6 +2,8 @@
 # API tracers
 
 
+include_directories (${SNAPPY_STATIC_INCLUDE_DIRS})
+
 if (ENABLE_STATIC_LIBGCC)
     add_linker_flags (-static-libgcc -Wl,--exclude-libs,libgcc.a)
 endif ()
@@ -337,7 +339,7 @@
         glhelpers
         glproc_gl
         common
-        ${SNAPPY_LIBRARIES}
+        ${SNAPPY_STATIC_LIBRARIES}
         ${CMAKE_THREAD_LIBS_INIT}
         dl
     )
@@ -398,7 +400,7 @@
         glhelpers
         glproc_egl
         common
-        ${SNAPPY_LIBRARIES}
+        ${SNAPPY_STATIC_LIBRARIES}
         ${CMAKE_THREAD_LIBS_INIT}
         dl
     )
--- a/cli/CMakeLists.txt
+++ b/cli/CMakeLists.txt
@@ -14,6 +14,8 @@
     add_definitions (-DAPITRACE_PYTHON_EXECUTABLE="${PYTHON_EXECUTABLE}")
 endif ()
 
+include_directories(${SNAPPY_INCLUDE_DIRS})
+
 add_executable (apitrace
     cli_main.cpp
     cli_diff.cpp
--- a/gui/CMakeLists.txt
+++ b/gui/CMakeLists.txt
@@ -63,6 +63,7 @@
 #add_app_icon(qapitrace_SRCS ../icons/hi*-qapitrace.png)
 include_directories(
     ${CMAKE_SOURCE_DIR} # for image/*
+    ${SNAPPY_INCLUDE_DIRS}
 )
 
 add_executable (qapitrace ${qapitrace_SRCS} ${qapitrace_UIS_H})
--- a/retrace/CMakeLists.txt
+++ b/retrace/CMakeLists.txt
@@ -8,6 +8,7 @@
     ${CMAKE_SOURCE_DIR}/dispatch
     ${CMAKE_SOURCE_DIR}/image
     ${CMAKE_SOURCE_DIR}/thirdparty/dxerr
+    ${SNAPPY_INCLUDE_DIRS}
 )
 
 add_definitions (-DRETRACE)
